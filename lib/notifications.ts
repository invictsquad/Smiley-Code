import { toast } from '@/components/ui/use-toast'

/**
 * Sistema de notifica√ß√µes padronizado para a aplica√ß√£o
 */
export const notifications = {
  // Notifica√ß√µes de sucesso
  success: {
    projectCreated: (projectName: string) =>
      toast({
        title: "‚úÖ Projeto criado!",
        description: `O projeto "${projectName}" foi criado com sucesso.`,
      }),

    projectSaved: () =>
      toast({
        title: "üíæ Projeto salvo!",
        description: "Todas as altera√ß√µes foram salvas automaticamente.",
      }),

    projectPublished: () =>
      toast({
        title: "üåê Projeto publicado!",
        description: "Seu projeto agora est√° p√∫blico e pode ser acessado por outros usu√°rios.",
      }),

    deploySuccess: (url: string) =>
      toast({
        title: "üöÄ Deploy realizado!",
        description: `Seu projeto est√° dispon√≠vel em: ${url}`,
      }),
  },

  // Notifica√ß√µes de erro
  error: {
    projectCreateFailed: () =>
      toast({
        title: "‚ùå Erro ao criar projeto",
        description: "N√£o foi poss√≠vel criar o projeto. Tente novamente.",
        variant: "destructive",
      }),

    projectSaveFailed: () =>
      toast({
        title: "‚ùå Erro ao salvar",
        description: "N√£o foi poss√≠vel salvar as altera√ß√µes. Verifique sua conex√£o.",
        variant: "destructive",
      }),

    networkError: () =>
      toast({
        title: "üåê Erro de conex√£o",
        description: "Verifique sua conex√£o com a internet e tente novamente.",
        variant: "destructive",
      }),

    authRequired: () =>
      toast({
        title: "üîê Login necess√°rio",
        description: "Voc√™ precisa estar logado para realizar esta a√ß√£o.",
        variant: "destructive",
      }),
  },

  // Notifica√ß√µes informativas
  info: {
    autoSaving: () =>
      toast({
        title: "üíæ Salvando automaticamente...",
        description: "Suas altera√ß√µes est√£o sendo salvas.",
      }),

    projectLoading: () =>
      toast({
        title: "üìÇ Carregando projeto...",
        description: "Aguarde enquanto carregamos seu projeto.",
      }),

    featureComingSoon: (feature: string) =>
      toast({
        title: "üöß Em breve!",
        description: `A funcionalidade "${feature}" estar√° dispon√≠vel em breve.`,
      }),
  },

  // Notifica√ß√µes de aviso
  warning: {
    unsavedChanges: () =>
      toast({
        title: "‚ö†Ô∏è Altera√ß√µes n√£o salvas",
        description: "Voc√™ tem altera√ß√µes n√£o salvas. Deseja continuar?",
      }),

    projectLimitReached: () =>
      toast({
        title: "‚ö†Ô∏è Limite atingido",
        description: "Voc√™ atingiu o limite de projetos. Considere fazer upgrade.",
      }),

    largeFileWarning: () =>
      toast({
        title: "‚ö†Ô∏è Arquivo grande",
        description: "Este arquivo √© muito grande e pode afetar a performance.",
      }),
  },
}

/**
 * Fun√ß√£o utilit√°ria para mostrar notifica√ß√µes de loading com promise
 */
export async function withLoadingToast<T>(
  promise: Promise<T>,
  messages: {
    loading: string
    success: string
    error: string
  }
): Promise<T> {
  const loadingToast = toast({
    title: messages.loading,
    description: "Aguarde...",
  })

  try {
    const result = await promise
    loadingToast.dismiss()
    
    toast({
      title: "‚úÖ Sucesso!",
      description: messages.success,
    })
    
    return result
  } catch (error) {
    loadingToast.dismiss()
    
    toast({
      title: "‚ùå Erro",
      description: messages.error,
      variant: "destructive",
    })
    
    throw error
  }
}