
import { Version, FileTree, Language } from '../types';
import { X, History, RefreshCw, Bot, User, Zap, AlertTriangle, Plus, Trash2, Edit, Code } from 'lucide-react';
import { motion, AnimatePresence } from 'framer-motion';
import { t } from '../lib/i18n';
import { AutoVersioningSystem } from '../lib/autoVersioning';

interface VersionHistoryModalProps {
  versions: Version[];
  onClose: () => void;
  onRestore: (fileTree: FileTree) => void;
  language: Language;
}

const VersionHistoryModal: React.FC<VersionHistoryModalProps> = ({ versions, onClose, onRestore, language }) => {
  return (
    <AnimatePresence>
      <motion.div
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        exit={{ opacity: 0 }}
        className="fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center z-50 p-4"
        onClick={onClose}
      >
        <motion.div
          initial={{ scale: 0.9, opacity: 0 }}
          animate={{ scale: 1, opacity: 1 }}
          exit={{ scale: 0.9, opacity: 0 }}
          transition={{ duration: 0.2 }}
          className="w-[95vw] max-w-2xl h-[70vh] bg-white dark:bg-dark-surface border-2 border-slate-800 dark:border-dark-border rounded-xl shadow-comic dark:shadow-comic-dark flex flex-col"
          onClick={e => e.stopPropagation()}
        >
          <header className="flex items-center justify-between p-4 border-b-2 border-slate-800 dark:border-dark-border">
            <div className="flex items-center gap-3">
              <History size={28} className="text-brand-coral"/>
              <h2 className="font-display text-3xl text-slate-800 dark:text-dark-text">{t('versionHistory.title', language)}</h2>
            </div>
            <button onClick={onClose} className="p-2 border-2 border-slate-800 dark:border-dark-border rounded-lg shadow-comic-sm bg-white dark:bg-dark-surface hover:bg-red-400 active:shadow-none transition-all ease-out-back active:translate-y-0.5">
              <X size={20} />
            </button>
          </header>
          <main className="flex-grow overflow-y-auto p-4 space-y-3">
            {versions.length > 0 ? (
              versions.map((version) => {
                const getChangeTypeIcon = (changeType?: string) => {
                  switch (changeType) {
                    case 'creation': return <Plus size={16} className="text-green-600" />;
                    case 'deletion': return <Trash2 size={16} className="text-red-600" />;
                    case 'bugfix': return <AlertTriangle size={16} className="text-red-500" />;
                    case 'feature': return <Zap size={16} className="text-blue-500" />;
                    case 'improvement': return <Zap size={16} className="text-yellow-500" />;
                    case 'refactor': return <Code size={16} className="text-purple-500" />;
                    default: return <Edit size={16} className="text-slate-500" />;
                  }
                };

                const getSeverityColor = (severity?: string) => {
                  switch (severity) {
                    case 'critical': return 'bg-red-100 text-red-800 border-red-200';
                    case 'major': return 'bg-yellow-100 text-yellow-800 border-yellow-200';
                    case 'minor': return 'bg-blue-100 text-blue-800 border-blue-200';
                    default: return 'bg-slate-100 text-slate-800 border-slate-200';
                  }
                };

                const isAutoGenerated = version.metadata?.isAutoGenerated;
                const changeType = version.metadata?.changeType;
                const severity = version.metadata?.severity;
                const filesChanged = version.metadata?.filesChanged || [];

                return (
                  <div key={version.id} className="p-4 border-2 border-slate-800/20 dark:border-dark-border rounded-lg bg-slate-50 dark:bg-slate-900/50">
                    <div className="flex flex-col sm:flex-row sm:items-start justify-between gap-3">
                      <div className="flex-grow">
                        <div className="flex items-center gap-2 mb-2">
                          {isAutoGenerated ? (
                            <Bot size={16} className="text-brand-teal" />
                          ) : (
                            <User size={16} className="text-brand-coral" />
                          )}
                          {changeType && getChangeTypeIcon(changeType)}
                          <p className="font-bold text-lg text-slate-700 dark:text-slate-200">{version.name}</p>
                          {severity && (
                            <span className={`px-2 py-1 rounded-full text-xs font-medium border ${getSeverityColor(severity)}`}>
                              {severity.toUpperCase()}
                            </span>
                          )}
                        </div>
                        
                        <div className="flex flex-col sm:flex-row sm:items-center gap-2 text-sm text-slate-500 dark:text-slate-400">
                          <span>{version.createdAt.toLocaleString()}</span>
                          {filesChanged.length > 0 && (
                            <>
                              <span className="hidden sm:inline">•</span>
                              <span>{filesChanged.length} arquivo(s) alterado(s)</span>
                            </>
                          )}
                          {isAutoGenerated && (
                            <>
                              <span className="hidden sm:inline">•</span>
                              <span className="text-brand-teal font-medium">Auto-salvo</span>
                            </>
                          )}
                        </div>

                        {filesChanged.length > 0 && (
                          <div className="mt-2 flex flex-wrap gap-1">
                            {filesChanged.slice(0, 3).map((file, index) => (
                              <span key={index} className="px-2 py-1 bg-slate-200 dark:bg-slate-700 text-slate-600 dark:text-slate-300 text-xs rounded-md font-mono">
                                {file}
                              </span>
                            ))}
                            {filesChanged.length > 3 && (
                              <span className="px-2 py-1 bg-slate-200 dark:bg-slate-700 text-slate-600 dark:text-slate-300 text-xs rounded-md">
                                +{filesChanged.length - 3} mais
                              </span>
                            )}
                          </div>
                        )}
                      </div>
                      
                      <button
                        onClick={() => onRestore(version.fileTree)}
                        className="flex-shrink-0 flex items-center justify-center gap-2 px-4 py-2 font-bold border-2 border-slate-800 dark:border-dark-border rounded-lg shadow-comic-sm bg-brand-teal text-slate-800 hover:bg-brand-yellow active:shadow-none transition-all ease-out-back active:translate-y-0.5"
                      >
                        <RefreshCw size={16} />
                        <span>{t('versionHistory.restore', language)}</span>
                      </button>
                    </div>
                  </div>
                );
              })
            ) : (
              <div className="text-center text-slate-500 dark:text-slate-400 h-full flex flex-col items-center justify-center">
                <p className="text-lg">{t('versionHistory.empty', language)}</p>
                <p className="text-md mt-1">{t('versionHistory.emptyDescription', language)}</p>
              </div>
            )}
          </main>
        </motion.div>
      </motion.div>
    </AnimatePresence>
  );
};

export default VersionHistoryModal;